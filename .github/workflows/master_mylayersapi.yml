# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy ASP.Net Core app to Azure Web App - myLayersApi

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1'
          include-prerelease: true
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9
        with:
          versionSpec: '5.1.x'
      - name: Use GitVersion
        id: gitversion # step id used as reference for output values
        uses: gittools/actions/gitversion/execute@v0.9
      - run: |
                echo "Major: ${{ steps.gitversion.outputs.major }}"
                echo "Minor: ${{ steps.gitversion.outputs.minor }}"
                echo "Patch: ${{ steps.gitversion.outputs.patch }}"
                echo "PreReleaseTag: ${{ steps.gitversion.outputs.preReleaseTag }}"
                echo "PreReleaseTagWithDash: ${{ steps.gitversion.outputs.preReleaseTagWithDash }}"
                echo "PreReleaseLabel: ${{ steps.gitversion.outputs.preReleaseLabel }}"
                echo "PreReleaseNumber: ${{ steps.gitversion.outputs.preReleaseNumber }}"
                echo "WeightedPreReleaseNumber: ${{ steps.gitversion.outputs.weightedPreReleaseNumber }}"
                echo "BuildMetaData: ${{ steps.gitversion.outputs.buildMetaData }}"
                echo "BuildMetaDataPadded: ${{ steps.gitversion.outputs.buildMetaDataPadded }}"
                echo "FullBuildMetaData: ${{ steps.gitversion.outputs.fullBuildMetaData }}"
                echo "MajorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}"
                echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
                echo "LegacySemVer: ${{ steps.gitversion.outputs.legacySemVer }}"
                echo "LegacySemVerPadded: ${{ steps.gitversion.outputs.legacySemVerPadded }}"
                echo "AssemblySemVer: ${{ steps.gitversion.outputs.assemblySemVer }}"
                echo "AssemblySemFileVer: ${{ steps.gitversion.outputs.assemblySemFileVer }}"
                echo "FullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}"
                echo "InformationalVersion: ${{ steps.gitversion.outputs.informationalVersion }}"
                echo "BranchName: ${{ steps.gitversion.outputs.branchName }}"
                echo "Sha: ${{ steps.gitversion.outputs.sha }}"
                echo "ShortSha: ${{ steps.gitversion.outputs.shortSha }}"
                echo "NuGetVersionV2: ${{ steps.gitversion.outputs.nuGetVersionV2 }}"
                echo "NuGetVersion: ${{ steps.gitversion.outputs.nuGetVersion }}"
                echo "NuGetPreReleaseTagV2: ${{ steps.gitversion.outputs.nuGetPreReleaseTagV2 }}"
                echo "NuGetPreReleaseTag: ${{ steps.gitversion.outputs.nuGetPreReleaseTag }}"
                echo "VersionSourceSha: ${{ steps.gitversion.outputs.versionSourceSha }}"
                echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.commitsSinceVersionSource }}"
                echo "CommitsSinceVersionSourcePadded: ${{ steps.gitversion.outputs.commitsSinceVersionSourcePadded }}"
                echo "CommitDate: ${{ steps.gitversion.outputs.commitDate }}"
           
      - name: Build with dotnet
        run: dotnet build --configuration Release
      - name: Pack
        run: dotnet pack common.sismo\common.sismo\common.sismo.csproj --configuration Release /p:PackageVersion=${{ steps.gitversion.outputs.commitDate }}beta -o "./packages" 
      - name: Push generated package to GitHub registry
        run: dotnet nuget push D:\a\mylayerapi\mylayerapi\packages\common.sismo.1.0.1.nupkg  --api-key ${{ secrets.GITHUB_TOKEN  }} --source https://nuget.pkg.github.com/igormatos02/index.json 

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'myLayersApi'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_BF8657C887474DCF9BE73F195F13F35C }}
          package: .
